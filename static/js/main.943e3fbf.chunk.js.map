{"version":3,"sources":["components/Container/Container.jsx","components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Notification/Notification.jsx","components/Counter/Counter.jsx","App.jsx","index.js","components/Container/Container.module.css"],"names":["Container","children","className","s","container","Section","title","FeedbackOptions","onIncrement","type","onClick","Statistics","good","neutral","bad","total","goodPercent","Notification","message","Counter","state","handleIncrement","e","name","target","dataset","setState","prevState","this","Math","round","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4QAMeA,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,mCCKxBI,G,MANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAAe,6BAAKA,MCmBrBC,G,MAlBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACtB,sBAAKN,UAAU,gBAAf,UACE,wBAAQO,KAAK,SAAS,YAAU,OAAOC,QAASF,EAAhD,kBAGA,wBAAQC,KAAK,SAAS,YAAU,UAAUC,QAASF,EAAnD,qBAGA,wBAAQC,KAAK,SAAS,YAAU,MAAMC,QAASF,EAA/C,sBCSWG,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,YAA9B,OACnB,qCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,WCAWC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCOpCC,E,4MACJC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,gBAAkB,SAAAC,GAChB,IAAMC,EAAOD,EAAEE,OAAOC,QAAQF,KAC9B,EAAKG,UAAS,SAAAC,GAAS,sBACpBJ,EAAOI,EAAUJ,GAAQ,O,4CAI9B,WACE,MAA+BK,KAAKR,MAA5BR,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQH,EAAOC,EAAUC,EACzBE,EAAca,KAAKC,MAAOlB,EAAOG,EAAS,KAChD,OACE,sBAAKb,UAAU,UAAf,UACE,cAAC,EAAD,CAASI,MAAM,0BACf,cAAC,EAAD,CAAiBE,YAAaoB,KAAKP,kBACnC,cAAC,EAAD,CAASf,MAAM,eACdS,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,YAAaA,IAGf,cAAC,EAAD,CAAcE,QAAQ,gC,GAhCVa,aA+CPZ,ICpDA,SAASa,IACtB,OAAO,cAAC,EAAD,UACL,cAAC,EAAD,MCAJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,gC","file":"static/js/main.943e3fbf.chunk.js","sourcesContent":["import s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title }) => <h3>{title}</h3>;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\nimport './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onIncrement }) => (\r\n  <div className=\"Counter__btns\">\r\n    <button type=\"button\" data-name=\"good\" onClick={onIncrement}>\r\n      Good\r\n    </button>\r\n    <button type=\"button\" data-name=\"neutral\" onClick={onIncrement}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" data-name=\"bad\" onClick={onIncrement}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  onIncrement: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nconst Statistics = ({ good, neutral, bad, total, goodPercent }) => (\r\n<>\r\n    <p>Good: {good}</p>\r\n    <p>Neutral: {neutral}</p>\r\n    <p>Bad: {bad}</p>\r\n    <p>Total: {total}</p>\r\n    <p>Positive feedback: {goodPercent}%</p>\r\n</>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  goodPercent: PropTypes.number.isRequired,\r\n\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport './Counter.module.css';\r\nimport Section from '../Section/Section';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\nimport Statistics from '../Statistics/Statistics';\r\nimport Notification from '../Notification/Notification';\r\n\r\nclass Counter extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handleIncrement = e => {\r\n    const name = e.target.dataset.name;\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { good, neutral, bad } = this.state;\r\n    const total = good + neutral + bad;\r\n    const goodPercent = Math.round((good / total) * 100);\r\n    return (\r\n      <div className=\"Counter\">\r\n        <Section title=\"Please leave feedback\" />\r\n        <FeedbackOptions onIncrement={this.handleIncrement} />\r\n        <Section title=\"Statistics\" />\r\n        {total > 0 ? (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            total={total}\r\n            goodPercent={goodPercent}\r\n          />\r\n        ) : (\r\n          <Notification message=\"There is no feedback\" />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nCounter.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  goodPercent: PropTypes.number,\r\n};\r\n\r\nexport default Counter;\r\n","import Container from './components/Container/Container';\r\nimport Counter from './components/Counter/Counter';\r\n\r\nexport default function App() {\r\n  return <Container>\r\n    <Counter />\r\n  </Container>;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__24_YI\"};"],"sourceRoot":""}